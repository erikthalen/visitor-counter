"use strict";var e=require("crypto"),t=require("fast-geoip"),n=require("mongodb"),o=require("url");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=r(t),a=r(o);const c=new Intl.DisplayNames(["en"],{type:"region"}),s=async e=>({total:e.length,countries:e.reduce(((e,{country:t})=>({...e,[t]:(e[t]||0)+1})),{})}),u=864e5,d={second:1e3,minute:6e4,hour:36e5,day:u,week:6048e5,month:2627856e3,year:31534272e3};module.exports=async({mongourl:t="mongodb://localhost:27017/",dbName:o="visitor-counter-db",ttl:r=3600,id:u="default",cookieKey:l="visitor-counter-id"}={})=>{const p=await(({mongourl:e,dbName:t,id:o,ttl:r}={})=>new Promise((i=>{const a=e.endsWith("/")?e.slice(0,-1):e;n.MongoClient.connect(`${a}/${t}`,(async(e,n)=>{if(e)throw e;const a=n.db(t),c=a.collection(`visitors-${o}`),s=a.collection(`visitors-${o}-current`);try{s.createIndex({createdAt:1},{expireAfterSeconds:r})}catch(e){console.log(e)}i({setTTL:e=>{try{s.dropIndexes(),s.createIndex({createdAt:1},{expireAfterSeconds:e})}catch(e){console.log(e)}},setVisitor:e=>{try{return s.insertOne({id:e,createdAt:new Date})}catch(e){console.log(e)}},getVisitor:async e=>{try{return await s.findOne({id:e})}catch(e){console.log(e)}},getVisitorCount:async()=>new Promise(((e,t)=>{s.count({},((o,r)=>{o&&(n.close(),t(o)),e(r)}))})),set:e=>{try{if(e)return c.insertOne(e)}catch(e){console.log(e)}},get:(e={})=>new Promise(((t,o)=>{c.find(e,{projection:{_id:0}}).toArray(((e,r)=>{e&&(n.close(),o(e)),t(r)}))}))})}))})))({id:u,mongourl:t,dbName:o,ttl:r});async function m(e){if(!e)return s(await p.get());const[t,n]=e.split("-"),o=d[t]?Date.now()-d[t]:new Date(t).getTime(),r=n?new Date(n).getTime():Date.now(),i=await p.get({date:{$gte:o,$lte:r}});return s(i)}return{record:async(t,n,o)=>{const r=(a=t.headers.cookie,a?a.split(";").map((e=>e.split("="))).reduce(((e,[t,n])=>({...e,[decodeURIComponent(t.trim())]:decodeURIComponent(n.trim())})),{}):{})[`${l}-${u}`];var a;if(!await p.getVisitor(r)){const o=e.randomUUID();p.setVisitor(o),p.set(await(async e=>{const t=(e.headers["x-forwarded-for"]||"").split(",")[0]||e.connection.remoteAddress;if(!t||"::ffff:127.0.0.1"===t)return;const n=await i.default.lookup(t);return{ip:t,countryCode:n?.country||!1,country:!!n&&c.of(n.country),date:Date.now()}})(t)),n.setHeader("Set-Cookie",`${l}-${u}=${o}`)}"function"==typeof o&&o()},get:m,visitors:async()=>await p.getVisitorCount(),async ui(e,t,n){const{pathname:o,query:r}=a.default.parse(e.url,!0);"visitor-counter"!==o.replaceAll("/","")&&(r.range||t.end('<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>visitor-counter</title>\n  </head>\n  <body>\n    <code>\n      <pre style="margin: 0;">ðŸ“ˆðŸ‘€\n      \n<input style="width: 236px" type="range" min="0" max="7" step="1" value="3">\n |   |   |   |   |   |   |   |\n s   m   h   d   w   m   y  all\n\n<output style="color: dodgerblue;background: #f5f5f5;display: inline-block;padding: 1em 4em 1em 1em;border-radius: 5px;"></output>\n      </pre>\n    </code>\n    <script>\n      const map = {\n        0: \'/?range=second\',\n        1: \'/?range=minute\',\n        2: \'/?range=hour\',\n        3: \'/?range=day\',\n        4: \'/?range=week\',\n        5: \'/?range=month\',\n        6: \'/?range=year\',\n        7: \'/?range=all\'\n      }\n      const input = document.querySelector(\'input\')\n      const output = document.querySelector(\'output\')\n      input.addEventListener(\'input\', ({ target: { value } }) => updateOutput(value))\n      updateOutput(3)\n      async function updateOutput(value) {\n        output.textContent = await fetch(\'/visitor-counter\' + map[value]).then(res =>\n          res.text()\n        )\n      }\n    <\/script>\n  </body>\n</html>\n'),t.end(JSON.stringify(await m("all"!==r.range&&r.range),null,2))),"function"==typeof n&&n()}}};
